name: build ad-llama

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main
    tags:
      - v*
    paths-ignore:
      - 'readme.md'

jobs:
  build-tvm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - id: cache
        uses: ./.github/actions/cache-tvm

      - name: pull submodules
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: git submodule update --init --recursive

      - name: setup emsdk
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: mymindstorm/setup-emsdk@v11
        with:
          version: 3.1.43
          actions-cache-folder: '__emsdk-cache'

      - name: build tvm dependency
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          cd 3rdparty/relax/web
          make
          npm ci
          npm run build

  build-and-publish-if-tagged:
    runs-on: ubuntu-latest
    needs: build-tvm
    steps:
      - uses: actions/checkout@v3

      - id: cache
        uses: ./.github/actions/cache-tvm

      - name: build ad-llama
        run: npm ci && npm run build

      - uses: actions/setup-node@v3
        if: startsWith(github.event.ref, 'refs/tags/')
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: publish
        if: startsWith(github.event.ref, 'refs/tags/')
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: deploy example to vercel
        working-directory: example/vite-demo
        run: |
          npm install --global vercel@latest
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
